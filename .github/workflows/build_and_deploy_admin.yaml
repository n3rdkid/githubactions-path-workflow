name: Admin workflow
on:
  push:
    paths:
      - "packages/admin/**"
jobs:
  setup_environment:
    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.get_env.outputs.env }}
    steps:
    - id: get_env
      run: |
        if grep -q "refs/tags/v" <<< ${{github.ref}}; then
          echo "::set-output name=env::PROD"
        else
          echo "::set-output name=env::DEV"
        fi
    - id: print_env
      name: Print environment
      run: echo  "Environment :- ${{ steps.get_env.outputs.env }}"

  build_and_deploy:
    name: Build and deploy the Admin Package
    runs-on: ubuntu-latest
    needs: setup_environment
    environment: ${{needs.setup_environment.outputs.env_name}}  
    steps:
      - uses: actions/checkout@v2
      
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Check dependencies in cache 
        id: yarn-cache 
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Initializing dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run:  yarn bootstrap

      - name: Creating & Initializing env variables 
        run: |
          echo "ENV_VARIABLES" > .env

      - name: Build the Admin package
        run: yarn build:gae:admin

      - name: Setup Cloud SDK
        if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags/v')) }}
        run: | 
          echo "SETUP GCP SDK"

      - name: Deploy admin package to Google App Engine
        if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags/v')) }}
        run: |
          echo "DEPLOY DEPLOY"